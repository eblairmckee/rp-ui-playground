{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "group",
  "type": "registry:component",
  "title": "Group",
  "description": "A group component for organizing related elements",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority",
    "clsx",
    "tailwind-merge"
  ],
  "registryDependencies": [
    "utils",
    "group-context"
  ],
  "files": [
    {
      "path": "src/components/group.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport React from \"react\";\n\nconst Group = ({\n  children,\n  className,\n  attached,\n  prefix,\n  suffix,\n}: {\n  children: React.ReactNode;\n  className?: string;\n  attached?: boolean;\n  prefix?: React.ReactNode;\n  suffix?: React.ReactNode;\n}) => {\n  const content = React.Children.toArray(children)\n    .filter((child) => React.isValidElement(child))\n    .map((child, index) => {\n      if (!attached) return child;\n\n      const isFirst = index === 0;\n      const isLast = index === React.Children.count(children) - 1;\n\n      return React.cloneElement(child as React.ReactElement, {\n        className: cn(\n          child.props.className,\n          isFirst && \"rounded-r-none\",\n          isLast && \"rounded-l-none\"\n        ),\n      });\n    });\n\n  return (\n    <div className={cn(\"flex items-end gap-1.5 w-full\", className)}>\n      {prefix}\n      <div className={cn(\"flex items-center w-full\", !attached && \"gap-1.5\")}>\n        {content}\n      </div>\n      {suffix}\n    </div>\n  );\n};\n\nexport { Group };\n",
      "type": "registry:component"
    }
  ]
}